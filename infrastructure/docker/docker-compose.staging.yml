services:
  # MariaDB Database for Staging
  mariadb-staging:
    image: mariadb:11.8
    platform: linux/arm64
    container_name: devsu-mariadb-staging
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MARIADB_DATABASE: ${DATABASE_NAME}
      MARIADB_USER: ${DATABASE_USER}
      MARIADB_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "${DATABASE_PORT:-3306}:3306"
    volumes:
      - mariadb_data_staging:/var/lib/mysql
      - mariadb_logs_staging:/var/log/mysql
    networks:
      - app-network-staging

  app-staging:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile
      target: runner
      platforms:
        - linux/amd64
        - linux/arm64
    platform: linux/arm64
    container_name: devsu-nodejs-api-staging
    ports:
      - "8001:8000"
    environment:
      - NODE_ENV=staging
      - DATABASE_HOST=mariadb-staging
    volumes:
      - app_data_staging:/app/data
      - app_logs_staging:/app/logs
    restart: unless-stopped
    networks:
      - app-network-staging

  # Nginx reverse proxy for staging
  nginx-staging:
    image: nginx:alpine
    platform: linux/arm64
    container_name: devsu-nginx-staging
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-staging
    restart: unless-stopped
    networks:
      - app-network-staging

volumes:
  mariadb_data_staging:
    driver: local
  mariadb_logs_staging:
    driver: local
  app_data_staging:
    driver: local
  app_logs_staging:
    driver: local

networks:
  app-network-staging:
    driver: bridge 