version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile
      target: runner
    container_name: devsu-nodejs-api-prod
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
    secrets:
      - db_password
      - jwt_secret
      - session_secret
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: devsu-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network

volumes:
  app_data:
    driver: local
  app_logs:
    driver: local

networks:
  app-network:
    driver: bridge

secrets:
  db_password:
    file: secrets/db_password.txt
  jwt_secret:
    file: secrets/jwt_secret.txt
  session_secret:
    file: secrets/session_secret.txt 