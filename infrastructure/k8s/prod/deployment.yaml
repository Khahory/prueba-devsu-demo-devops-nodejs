apiVersion: apps/v1
kind: Deployment
metadata:
  name: devsu-demo-app
  namespace: devsu-demo-prod
  labels:
    app: devsu-demo
    environment: production
    component: app
spec:
  replicas: 5
  selector:
    matchLabels:
      app: devsu-demo
      environment: production
  template:
    metadata:
      labels:
        app: devsu-demo
        environment: production
        component: app
    spec:
      volumes:
      - name: sqlite-data
        emptyDir: {}
      containers:
      - name: devsu-demo-app
        image: khakharis/devsu-demo:latest
        ports:
        - containerPort: 8000
          name: http
        volumeMounts:
        - name: sqlite-data
          mountPath: /app/data
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: devsu-demo-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: devsu-demo-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: devsu-demo-config
              key: LOG_LEVEL
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: devsu-demo-config
              key: DATABASE_NAME
        - name: FORCE_SYNC
          valueFrom:
            configMapKeyRef:
              name: devsu-demo-config
              key: FORCE_SYNC
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: devsu-demo-secrets
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: devsu-demo-secrets
              key: DATABASE_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: devsu-demo-secrets
              key: JWT_SECRET
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: devsu-demo-secrets
              key: SESSION_SECRET
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5 