name: 🚀 Deploy to Production

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to deploy (e.g., main-abc123, v20240801-01)'
        required: true
        type: string
      confirm_production:
        description: 'Type "PRODUCTION" to confirm'
        required: true
        type: string

env:
  AWS_REGION: us-east-1
  DOCKER_REGISTRY: ${{ vars.DOCKER_USERNAME }}
  IMAGE_NAME: devsu-demo

jobs:
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: ✅ Validate confirmation
        run: |
          if [ "${{ inputs.confirm_production }}" != "PRODUCTION" ]; then
            echo "❌ Production deployment not confirmed. Please type 'PRODUCTION' to confirm."
            exit 1
          fi
          echo "✅ Production deployment confirmed"

      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 📦 Install kubectl
        uses: azure/setup-kubectl@v3

      - name: 🔗 Connect to EKS
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name devsu-demo-prod-eks

      - name: 🔍 Verify image exists
        run: |
          # Verify the Docker image exists
          docker manifest inspect ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }} || {
            echo "❌ Image not found: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}"
            exit 1
          }
          echo "✅ Image verified"

      - name: 📋 Create namespace if not exists
        run: |
          kubectl create namespace devsu-demo-prod --dry-run=client -o yaml | kubectl apply -f -

      - name: 🔧 Apply Kubernetes manifests
        run: |
          # Apply base manifests (ConfigMap, Service, etc.)
          kubectl apply -f infrastructure/k8s/prod/configmap.yaml
          kubectl apply -f infrastructure/k8s/prod/service.yaml
          kubectl apply -f infrastructure/k8s/prod/hpa.yaml
          
          # Apply Secret if exists
          if [ -f "infrastructure/k8s/prod/secret.yaml" ]; then
            kubectl apply -f infrastructure/k8s/prod/secret.yaml
          fi

      - name: 🚀 Deploy to production
        run: |
          # Update image in deployment
          kubectl set image deployment/devsu-demo-app \
            devsu-demo-app=${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }} \
            -n devsu-demo-prod
          
          # Wait for rollout
          kubectl rollout status deployment/devsu-demo-app -n devsu-demo-prod --timeout=600s

      - name: 🧪 Health check
        run: |
          # Wait for pods to be ready
          kubectl wait --for=condition=ready pod -l app=devsu-demo -n devsu-demo-prod --timeout=300s
          echo "✅ Production deployment successful"

      - name: 📊 Deployment summary
        run: |
          echo "## 🎉 Production Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "**Namespace:** devsu-demo-prod" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Current Status:" >> $GITHUB_STEP_SUMMARY
          kubectl get pods -n devsu-demo-prod -o wide >> $GITHUB_STEP_SUMMARY